{"version":3,"sources":["ColorScheme.js","components/Styles/StyledNav.js","components/Nav.js","pages/Test.js","components/Styles/StyledApp.js","pages/Test2.js","components/Styles/StyledMonocLINK.js","pages/MonocLINK.js","App.js","reportWebVitals.js","index.js"],"names":["colors","Nav","styled","nav","NavLink","Link","HomeLink","NavMenu","div","NavBar","to","Test","Test2","Header","MonocLINK","TxtRotate","el","toRotate","period","this","loopNum","parseInt","txt","tick","prototype","i","length","fullTxt","substring","innerHTML","that","delta","Math","random","setTimeout","window","onload","elements","document","getElementsByClassName","getAttribute","JSON","parse","class","data","App","body","style","backgroundColor","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"4OAAaA,EACE,UADFA,EAEC,UAFDA,EAGA,UAHAA,EAIA,UAJAA,EAMH,UCDGC,EAAMC,IAAOC,IAAV,uWACAH,GAeHI,EAAUF,YAAOG,IAAPH,CAAH,0MACTF,EAQEA,GAIAM,EAAWJ,YAAOG,IAAPH,CAAH,gMACVF,GAWEO,EAAUL,IAAOM,IAAV,yL,OCnBLC,EAnBA,WACb,OACI,cAACR,EAAD,UACE,eAACM,EAAD,WACE,cAACH,EAAD,CAASM,GAAG,QAAZ,kBAGA,cAACJ,EAAD,CAAUI,GAAG,IAAb,uBAGA,cAACN,EAAD,CAASM,GAAG,SAAZ,yB,OCPKC,GCHQT,IAAOM,IAAV,2HACIR,GDPX,WACT,OACI,gCACI,uCADJ,y2BEOOY,EATD,WACV,OACI,gCACI,uCADJ,w2BCDKC,EAASX,IAAOM,IAAV,4RACNR,EAKWA,GCmDTc,EAzDG,WAOd,IAAIC,EAAY,SAASC,EAAIC,EAAUC,GACnCC,KAAKF,SAAWA,EAChBE,KAAKH,GAAKA,EACVG,KAAKC,QAAU,EACfD,KAAKD,OAASG,SAASH,EAAQ,KAAO,IACtCC,KAAKG,IAAM,GACXH,KAAKI,QAqCT,OAlCAR,EAAUS,UAAUD,KAAO,WACvB,IAAIE,EAAIN,KAAKC,QAAUD,KAAKF,SAASS,OACjCC,EAAUR,KAAKF,SAASQ,GAE5BN,KAAKG,IAAMK,EAAQC,UAAU,EAAGT,KAAKG,IAAII,OAAS,GAElDP,KAAKH,GAAGa,UAAY,sBAAsBV,KAAKG,IAAI,UAEnD,IAAIQ,EAAOX,KACPY,EAAQ,IAAsB,IAAhBC,KAAKC,SAGnBd,KAAKG,MAAQK,EACbI,EAAQZ,KAAKD,OACO,KAAbC,KAAKG,MACZH,KAAKC,UACLW,EAAQ,KAGZG,YAAW,WACPJ,EAAKP,SACNQ,IAGPI,OAAOC,OAAS,WAEZ,IADA,IAAIC,EAAWC,SAASC,uBAAuB,cACtCd,EAAE,EAAGA,EAAEY,EAASX,OAAQD,IAAK,CAClC,IAAIR,EAAWoB,EAASZ,GAAGe,aAAa,QACpCtB,EAASmB,EAASZ,GAAGe,aAAa,eAClCvB,GACA,IAAIF,EAAUsB,EAASZ,GAAIgB,KAAKC,MAAMzB,GAAWC,KAKzD,8BACI,cAACL,EAAD,UAAQ,sBAAM8B,MAAM,aAAa,cAAY,OAAOC,KAAK,2BClBtDC,MAnBf,WAIE,OAFAP,SAASQ,KAAKC,MAAMC,gBAAkBhD,EAGpC,8BACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAOiD,KAAK,IAAIC,OAAK,EAACC,UAAWrC,IACjC,cAAC,IAAD,CAAOmC,KAAK,QAAQE,UAAWxC,IAC/B,cAAC,IAAD,CAAOsC,KAAK,SAASE,UAAWvC,aCjB7BwC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFzB,SAAS0B,eAAe,SAM1BZ,M","file":"static/js/main.5c4fa5b8.chunk.js","sourcesContent":["export const colors = {\n    richBlack: \"#0D1B2A\",\n    amethyst: \"#9067C6\",\n    blurple: \"#8D86C9\",\n    lavGrey: \"#CAC4CE\",\n    linen: \"#F7ECE1\",\n    test: \"#00FF00\"\n};\n\n    \n\n//https://coolors.co/0d1b2a-9067c6-8d86c9-cac4ce-f7ece1","import { NavLink as Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport {colors} from '../../ColorScheme';\n\nexport const Nav = styled.nav`\n  background: ${colors.richBlack};\n  height: 8vh;\n  display: flex;\n  justify-content: space-between;\n  margin-top: 1vh;\n  margin-left: 1vw;\n  margin-right: 1vw;\n  padding: 0.2rem calc((100vw - 1000px) / 2);\n  z-index: 12;\n  align-items: center;\n  justify-content: center;\n  border-top-right-radius: 1vw;\n  border-top-left-radius: 1vw;\n`;\n  \nexport const NavLink = styled(Link)`\n  color: ${colors.blurple};\n  font-size: 1.25rem;\n  display: flex;\n  text-decoration: none;\n  padding: 0 1rem;\n  height: 100%;\n  cursor: pointer;\n  &.active {\n    color: ${colors.lavGrey};\n  }\n`;\n\nexport const HomeLink = styled(Link)`\n  color: ${colors.amethyst};\n  font-size: 1.75rem;\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  padding: 0 1rem;\n  height: 100%;\n  cursor: pointer;\n\n`;\n  \nexport const NavMenu = styled.div`\n  display: flex;\n  align-items: center;\n  margin-right: -24px;\n  white-space: nowrap;\n  @media screen and (max-width: 768px) {\n    display: none;\n  }\n`;\n  ","import React from 'react';\nimport {\n  HomeLink,\n  Nav,\n  NavLink,\n  NavMenu,\n} from './Styles/StyledNav';\n  \nconst NavBar = () => {\n  return (\n      <Nav>\n        <NavMenu>\n          <NavLink to='/test'>\n            test\n          </NavLink>\n          <HomeLink to='/'>\n            monoclink\n          </HomeLink>\n          <NavLink to='/test2'>\n            test2\n          </NavLink>\n        </NavMenu>\n      </Nav>\n  );\n};\n\n  \nexport default NavBar;","import React from 'react';\n\nconst Test = () => {\n    return (\n        <div>\n            <h1>test1</h1>\n            Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?\n        </div>\n    );\n};\n\nexport default Test;\n\n","import styled from 'styled-components';\nimport { colors } from '../../ColorScheme';\n\n/*  this doesn't do anything now that I added\n    the document.blablabla to app.js, but might\n    be useful in the future \n*/\n\nexport const Wrapper = styled.div`\n    background-color: ${colors.test}\n    padding: 1rem;\n    margin-left: 1vw;\n    margin-right: 1vw;  \n`","import React from 'react';\n\nconst Test2 = () => {\n    return (\n        <div>\n            <h1>test2</h1>\n            Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?\n        </div>\n    );\n};\n\nexport default Test2;\n\n","import styled from 'styled-components';\nimport {colors} from '../../ColorScheme';\n\nexport const Header = styled.div`\n    color: ${colors.richBlack};\n    font-weight: bold;\n    font-size: 4rem;\n    text-align: center;\n    padding: 1em;\n    background-color: ${colors.blurple};\n    margin-left: 1vw;\n    margin-right: 1vw;\n    border-bottom-left-radius: 1vw;\n    border-bottom-right-radius: 1vw;\n`;\n\n","import React from 'react';\nimport {Header} from  '../components/Styles/StyledMonocLINK'\n\nconst MonocLINK = () => {\n\n    // TODO:\n    // I WANT TO TURN THIS INTO A COMPONENT\n    // NEXT COMMIT WILL BE THIS\n    // source: https://speckyboy.com/css-javascript-text-animation-snippets/\n    // number 5\n    var TxtRotate = function(el, toRotate, period) {\n        this.toRotate = toRotate;\n        this.el = el;\n        this.loopNum = 0;\n        this.period = parseInt(period, 10) || 2000;\n        this.txt = '';\n        this.tick();\n    };\n\n    TxtRotate.prototype.tick = function() {\n        var i = this.loopNum % this.toRotate.length;\n        var fullTxt = this.toRotate[i];\n\n        this.txt = fullTxt.substring(0, this.txt.length + 1);\n\n        this.el.innerHTML = '<span class=\"wrap\">'+this.txt+'</span>';\n\n        var that = this;\n        var delta = 300 - Math.random() * 100;\n\n\n        if (this.txt === fullTxt) {\n            delta = this.period;\n        } else if (this.txt === '') {\n            this.loopNum++;\n            delta = 500;\n        }\n\n        setTimeout(function() {\n            that.tick();\n        }, delta);\n    };\n\n    window.onload = function() {\n        var elements = document.getElementsByClassName('txt-rotate');\n        for (var i=0; i<elements.length; i++) {\n            var toRotate = elements[i].getAttribute('data');\n            var period = elements[i].getAttribute('data-period');\n            if (toRotate) {\n                new TxtRotate(elements[i], JSON.parse(toRotate), period);\n            }\n        }\n    };\n    return (\n        <div>\n            <Header><span class=\"txt-rotate\" data-period=\"1000\" data='[ \"monoc.link;\" ]' ></span></Header>\n        </div>\n    );\n};\n\nexport default MonocLINK;","import './App.css';\n\n// components & deps\nimport Nav from './components/Nav';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport { Wrapper } from './components/Styles/StyledApp';\n\n\n// pages\nimport Test from './pages/Test';\nimport Test2 from './pages/Test2';\nimport MonocLINK from './pages/MonocLINK';\n\n// colors\nimport { colors } from './ColorScheme';\n\n\nfunction App() {\n  // set body color\n  document.body.style.backgroundColor = colors.lavGrey;\n\n  return (\n    <div>\n      <Router>\n        <Nav />\n        <Switch>\n            <Route path='/' exact component={MonocLINK} />\n            <Route path='/test' component={Test} />\n            <Route path='/test2' component={Test2} />\n        </Switch>\n      </Router>\n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}